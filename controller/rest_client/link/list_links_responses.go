// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package link

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"ztna-core/ztna/logtrace"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"ztna-core/ztna/controller/rest_model"
)

// ListLinksReader is a Reader for the ListLinks structure.
type ListLinksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListLinksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
    logtrace.LogWithFunctionName()
	switch response.Code() {
	case 200:
		result := NewListLinksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListLinksUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListLinksTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListLinksOK creates a ListLinksOK with default headers values
func NewListLinksOK() *ListLinksOK {
    logtrace.LogWithFunctionName()
	return &ListLinksOK{}
}

/* ListLinksOK describes a response with status code 200, with default header values.

A list of links
*/
type ListLinksOK struct {
	Payload *rest_model.ListLinksEnvelope
}

func (o *ListLinksOK) Error() string {
    logtrace.LogWithFunctionName()
	return fmt.Sprintf("[GET /links][%d] listLinksOK  %+v", 200, o.Payload)
}
func (o *ListLinksOK) GetPayload() *rest_model.ListLinksEnvelope {
    logtrace.LogWithFunctionName()
	return o.Payload
}

func (o *ListLinksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
    logtrace.LogWithFunctionName()

	o.Payload = new(rest_model.ListLinksEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLinksUnauthorized creates a ListLinksUnauthorized with default headers values
func NewListLinksUnauthorized() *ListLinksUnauthorized {
    logtrace.LogWithFunctionName()
	return &ListLinksUnauthorized{}
}

/* ListLinksUnauthorized describes a response with status code 401, with default header values.

The currently supplied session does not have the correct access rights to request this resource
*/
type ListLinksUnauthorized struct {
	Payload *rest_model.APIErrorEnvelope
}

func (o *ListLinksUnauthorized) Error() string {
    logtrace.LogWithFunctionName()
	return fmt.Sprintf("[GET /links][%d] listLinksUnauthorized  %+v", 401, o.Payload)
}
func (o *ListLinksUnauthorized) GetPayload() *rest_model.APIErrorEnvelope {
    logtrace.LogWithFunctionName()
	return o.Payload
}

func (o *ListLinksUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
    logtrace.LogWithFunctionName()

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLinksTooManyRequests creates a ListLinksTooManyRequests with default headers values
func NewListLinksTooManyRequests() *ListLinksTooManyRequests {
    logtrace.LogWithFunctionName()
	return &ListLinksTooManyRequests{}
}

/* ListLinksTooManyRequests describes a response with status code 429, with default header values.

The resource requested is rate limited and the rate limit has been exceeded
*/
type ListLinksTooManyRequests struct {
	Payload *rest_model.APIErrorEnvelope
}

func (o *ListLinksTooManyRequests) Error() string {
    logtrace.LogWithFunctionName()
	return fmt.Sprintf("[GET /links][%d] listLinksTooManyRequests  %+v", 429, o.Payload)
}
func (o *ListLinksTooManyRequests) GetPayload() *rest_model.APIErrorEnvelope {
    logtrace.LogWithFunctionName()
	return o.Payload
}

func (o *ListLinksTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
    logtrace.LogWithFunctionName()

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
